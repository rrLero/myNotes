---
preview: JS - my Reminder
title: JS-reminder
tags: JS
author: rrLero
date: 2017-09-04 14:07:00
---
**Замыкание** – это функция вместе со всеми внешними переменными, которые ей доступны.

Тем не менее, в JavaScript есть небольшая терминологическая особенность.

Обычно, говоря «замыкание функции», подразумевают не саму эту функцию, а именно внешние переменные.

Иногда говорят «переменная берётся из замыкания». Это означает – из внешнего объекта переменных.

**this** - Итак, мы знаем, что this – это текущий объект при вызове «через точку» и новый объект при конструировании через new.
**Итого про this**
Значение this устанавливается в зависимости от того, как вызвана функция:

При вызове функции как метода:

```
obj.func(...)    // this = obj
obj["func"](...)
```

При обычном вызове:
```
func(...) // this = window (ES3) /undefined (ES5)
```

В new:

```
new func() // this = {} (новый объект)
```

Явное указание:

```
func.apply(context, args) // this = context (явная передача)
func.call(context, arg1, arg2, ...)
```