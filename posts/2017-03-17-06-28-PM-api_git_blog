---
layout:
title: API git_blog documentation
tags: Программирование
author: rrLero
date: 2017-03-17 20:13:00
---
В данный момент бэкенд размещен на http://gitblog.pythonanywhere.com - это есть началом всех запросов и дальше я прописывать не буду.

git_name - имя Юзера ГитХаба

git_repository_blog - имя репозитория этого юзера
# Базовые запросы
**1. Запрос на получение списка постов**

> *`/<gitname>/<gitrepositoryblog>/api/get`, метод=GET- выведет json со словарем постов, лучше отправлять авторизированно через токен в аргументах, но выведет и без токена**.*

**2. Запрос на получение одного поста**

> *`/<git_name>/<git_repository_blog>/api/get/id/<id>` метод=GET, где id - это индивидуальный номер поста, получаем из запроса №1. выведет json с данными об этом посте, или {'message': 'no such post'} если id не совпадет*
> 
> *также можно получить данные поста по имени файла на гитхабе включая расширение или же title из первого запросе, обратиться в этом случае надо `/<git_name>/<git_repository_blog>/api/get/<title>` метод=GET*

**3. Запрос на обновление блога(считывает все данные с репозитория)**

> *`/<git_name>/<git_repository_blog>/api/update или web_hook` метод=GET. До обновления все данные берутся из файла хранящегося локально, который был считан первый раз при открытии блога. рекомендуется обновлять при каждом изменении сделанном в блоге, ну и обящательно настроить вебхук на гитхабе*

**4. Запрос на получение списка всех юзеров кто пользуется платформой**

> *`/api/blog_list`метод=GET. отдает json всех кто пользуется платформой в виде Имя и Реп*
 
**5. Запрос на авторизацию через ГитХаб**

> *`/<git_name>/<git_repository_blog>/api/oauth?code=code`метод=GET. в запросе обязательно в аргументах надо указать код полученный от ГитХаба при авторизации. Отдает access_token пользователя ГитХаба
 
**6. Запрос на проверку прав пользователя к данному репозиторию(является ли этот юзер коллаборатором репа)**
> *`/api/repo_master/<git_name>/<git_repository_blog>/<test_user>?access_token=access_token`метод=GET. в запросе обязательно в аргументах надо указать token от ГитХаба иначе работать не будет. Отдает {'access': True} или {'access': False}